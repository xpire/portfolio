{"version":3,"sources":["radar.svg","github2.png","linkedin.svg","email.svg","components/background/Background.tsx","components/section/Section.tsx","components/common/Box.tsx","components/common/ColorText.tsx","components/ui/animation.constants.tsx","components/hero/Hero.tsx","theme/Theme.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Background","styled","div","Section","Box","TopLeftBox","BottomRightBox","ColorText","children","restProps","span","style","color","animate","transition","duration","Typography","MySection","Line","Grid","AnimatedSentence","MinimalLink","motion","a","ParallaxImg","img","data","name","value","left","right","href","key","src","AvatarLogo","LinkedinLogo","GithubLogo","GmailLogo","styledHero","useState","current","setCurrent","hover","setHover","onClick","useCallback","length","useEffect","interval","setInterval","clearInterval","transitions","useTransition","item","from","opacity","transform","enter","leave","backgroundTransitions","onMouseEnter","onMouseLeave","container","spacing","variant","map","props","target","rel","whileHover","scale","whileTap","display","flexDirection","alt","filter","theme","createMuiTheme","console","log","typography","h1","responsiveFontSizes","Theme","ThemeProvider","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7579c44c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/radar.4fa959c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/github2.b55ca4ae.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.9a4f74ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/email.7388b370.svg\";","import styled from \"styled-components\";\n\nconst Background = styled.div`\n  text-align: center;\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`;\n\nexport default Background;\n","import styled from \"styled-components\";\n\nconst Section = styled.div`\n  min-width: 100%;\n  min-height: 100vh;\n  position: relative;\n  overflow: hidden;\n`;\n\nexport default Section;\n","import styled from \"styled-components\";\n\nexport const Box = styled.div`\n  display: flex;\n  position: absolute;\n`;\n\nexport const TopLeftBox = styled(Box)`\n  flex-direction: column;\n  align-items: flex-start;\n  z-index: 5;\n  padding-left: 5vw;\n  padding-right: 5vw;\n  padding-top: 5vh;\n`;\n\nexport const BottomRightBox = styled(Box)`\n  align-items: flex-start;\n  bottom: 100%;\n  right: 45%;\n  z-index: 0;\n`;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { motion } from \"framer-motion\";\nimport { TRANSITION } from \"../ui/animation.constants\";\n\ntype Props = {\n  children: string;\n  key?: string;\n  variant?:\n    | \"inherit\"\n    | \"button\"\n    | \"caption\"\n    | \"h1\"\n    | \"h2\"\n    | \"h3\"\n    | \"h4\"\n    | \"h5\"\n    | \"h6\"\n    | \"overline\"\n    | \"subtitle1\"\n    | \"subtitle2\"\n    | \"body1\"\n    | \"body2\"\n    | \"srOnly\"\n    | undefined;\n  display?: \"inline\";\n  duration?: number;\n};\n\nconst ColorText = ({ children, ...restProps }: Props) => {\n  return (\n    <motion.span\n      style={{ color: \"#3F5EFB\" }}\n      animate={{ color: \"#FC466B\" }}\n      transition={{ duration: restProps!.duration || TRANSITION }}\n    >\n      <Typography {...restProps}>{children}</Typography>\n    </motion.span>\n  );\n};\n\nexport default ColorText;\n","export const TRANSITION = 5;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useTransition, animated } from \"react-spring\";\nimport { motion } from \"framer-motion\";\n\nimport Section from \"../section/Section\";\nimport { Box, TopLeftBox, BottomRightBox } from \"../common/Box\";\nimport ColorText from \"../common/ColorText\";\nimport AvatarLogo from \"../../radar.svg\";\nimport GithubLogo from \"../../github2.png\";\nimport LinkedinLogo from \"../../linkedin.svg\";\nimport GmailLogo from \"../../email.svg\";\n\nconst MySection = styled(Section)`\n  background: black;\n  z-index: 5;\n`;\n\nconst Line = styled(Grid)`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  position: relative;\n`;\n\nconst AnimatedSentence = styled(Box)`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: row;\n  white-space: nowrap;\n  word-wrap: break-word;\n  flex-wrap: wrap;\n`;\n\nconst MinimalLink = styled(motion.a)`\n  text-decoration: none;\n  position: relative;\n  color: white;\n`;\n\nconst ParallaxImg = styled(motion.img)`\n  width: auto;\n  height: 100vh;\n`;\n\nconst data = [\n  {\n    name: \"name is\",\n    value: \"Justin Or\",\n    left: \"\",\n    right: \"\",\n    href: \"#\",\n    key: 0,\n    src: AvatarLogo,\n  },\n  {\n    name: \"Linkedin is\",\n    value: \"justinor\",\n    left: \"linkedin.com/in/\",\n    right: \"/\",\n    href: \"https://au.linkedin.com/in/justinor\",\n    key: 1,\n    src: LinkedinLogo,\n  },\n  {\n    name: \"Github is\",\n    value: \"xpire\",\n    left: \"github.com/\",\n    right: \"/\",\n    href: \"https://github.com/xpire\",\n    key: 2,\n    src: GithubLogo,\n  },\n  {\n    name: \"email is\",\n    value: \"justin.or.mail\",\n    left: \"\",\n    right: \"@gmail.com\",\n    href: \"mailto:justin.or.mail@gmail.com\",\n    key: 3,\n    src: GmailLogo,\n  },\n];\n\ntype transitionProps = {\n  item: number;\n  props: any;\n  key: string;\n};\n\nconst Hero = () => {\n  const [current, setCurrent] = useState(0);\n  const [hover, setHover] = useState(false);\n\n  const onClick = useCallback(() => {\n    setCurrent((current: number) => (current + 1) % data.length);\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!hover) onClick();\n    }, 4000);\n    return () => clearInterval(interval);\n  });\n\n  const transitions = useTransition(current, (item: number) => item, {\n    from: { opacity: 0, transform: \"translate3d(0, -40px, 0)\" },\n    enter: { opacity: 1, transform: \"translate3d(0, 0px, 0)\" },\n    leave: { opacity: 0, transform: \"translate3d(0, 40px, 0)\" },\n  });\n\n  const backgroundTransitions = useTransition(current, (item: number) => item, {\n    from: { opacity: 0, transform: \"translate3d(40px, 0, 0)\" },\n    enter: { opacity: 0.5, transform: \"translate3d(0, 0, 0)\" },\n    leave: { opacity: 0, transform: \"translate3d(-40px, 0, 0)\" },\n  });\n\n  return (\n    <MySection onClick={onClick}>\n      <TopLeftBox\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n      >\n        <Line container spacing={3}>\n          <Grid item>\n            <Typography variant=\"h1\">{`Hi my `}</Typography>\n          </Grid>\n          <Grid item>\n            {transitions.map(({ item, props, key }: transitionProps) => {\n              return (\n                <AnimatedSentence key={key + \"n1\"}>\n                  <animated.div key={key + \"n2\"} style={{ ...props }}>\n                    <Typography key={key + \"n3\"} variant=\"h1\">\n                      {data[item].name}\n                    </Typography>\n                  </animated.div>\n                </AnimatedSentence>\n              );\n            })}\n          </Grid>\n        </Line>\n        <Line container spacing={3}>\n          <Grid item>\n            <Typography variant=\"h1\">{`>`}</Typography>\n          </Grid>\n          <Grid item>\n            {transitions.map(({ item, props, key }: transitionProps) => {\n              return (\n                <AnimatedSentence key={key + \"v1\"}>\n                  <MinimalLink\n                    href={data[item].href}\n                    target={item === 0 ? \"\" : \"_blank\"}\n                    rel={item === 0 ? \"\" : \"noopener noreferrer\"}\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.9 }}\n                  >\n                    <animated.div\n                      key={key + \"v2\"}\n                      style={{\n                        ...props,\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                      }}\n                    >\n                      <Typography key={key + \"v3\"} variant=\"h1\">\n                        {data[item].left}\n                      </Typography>\n                      <ColorText key={key + \"v4\"} variant=\"h1\">\n                        {data[item].value}\n                      </ColorText>\n                      <Typography key={key + \"v5\"} variant=\"h1\">\n                        {data[item].right}\n                      </Typography>\n                    </animated.div>\n                  </MinimalLink>\n                </AnimatedSentence>\n              );\n            })}\n          </Grid>\n        </Line>\n        <Typography variant=\"h3\">\n          Advanced Maths / Computer Science / UNSW\n        </Typography>\n      </TopLeftBox>\n      <BottomRightBox>\n        {backgroundTransitions.map(({ item, props, key }: transitionProps) => {\n          return (\n            <AnimatedSentence key={key + \"b1\"}>\n              <animated.div key={key + \"b1\"} style={{ ...props }}>\n                <ParallaxImg\n                  key={key + \"b1\"}\n                  src={data[item].src}\n                  alt=\"background overlay\"\n                  style={{ filter: \"invert(100%)\" }}\n                />\n              </animated.div>\n            </AnimatedSentence>\n          );\n        })}\n      </BottomRightBox>\n    </MySection>\n  );\n};\n\nconst styledHero = styled(Hero)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default styledHero;\n","import React from \"react\";\nimport {\n  createMuiTheme,\n  responsiveFontSizes,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme();\nconsole.log(theme.typography.h1);\n// theme.typography.h1 = {\n//   ...theme.typography.h1,\n//   fontSize: \"6rem\",\n//   // \"@media (min-width:600px)\": {\n//   //   fontSize: \"4.5rem\",\n//   // },\n//   [theme.breakpoints.up(\"xs\")]: {\n//     fontSize: \"1\",\n//   },\n//   [theme.breakpoints.up(\"sm\")]: {\n//     fontSize: \"2\",\n//   },\n//   [theme.breakpoints.up(\"md\")]: {\n//     fontSize: \"3\",\n//   },\n//   [theme.breakpoints.up(\"lg\")]: {\n//     fontSize: \"4\",\n//   },\n//   [theme.breakpoints.up(\"xl\")]: {\n//     fontSize: \"5\",\n//   },\n// };\ntheme = responsiveFontSizes(theme);\n\nconst Theme = ({ children }: { children: React.ReactNode }) => {\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n};\n\nexport default Theme;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport Background from \"./components/background/Background\";\nimport Hero from \"./components/hero/Hero\";\nimport About from \"./components/about/About\";\nimport Projects from \"./components/projects/Projects\";\nimport Contact from \"./components/contact/Contact\";\nimport Theme from \"./theme/Theme\";\n\nfunction App() {\n  return (\n    <Theme>\n      <Background>\n        <Hero />\n        {/* <About />\n        <Projects />\n        <Contact /> */}\n      </Background>\n    </Theme>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}